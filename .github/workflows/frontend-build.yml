name: Build Angular Frontend

on:
  push:
    branches: [ main ]
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci
      - run: npm install -g @angular/cli

      - name: Build Angular
        run: ng build --configuration production

      - name: Create GitHub Release
        run: |
          TAG=$(date +%Y%m%d%H%M%S)
          gh release create "$TAG" dist/scrum-planner/browser/* \
            --title "Frontend Build $TAG" \
            --notes "Automated release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trigger-backend:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Backend Build
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.BACKEND_TRIGGER_PAT }}" \
            https://api.github.com/repos/nallayasami/scrum-planner-spring-be/dispatches \
            -d '{"event_type":"frontend-build-released"}'
      - name: Wait for Backend Workflow Completion
        run: |
          echo "Polling backend workflow status..."
          BACKEND_REPO="nallayasami/scrum-planner-spring-be"
          TOKEN="${{ secrets.BACKEND_TRIGGER_PAT }}"
          WORKFLOW_NAME="build.yml"

          for i in {1..20}; do
            echo "Checking attempt $i..."
            STATUS=$(curl -s -H "Authorization: token $TOKEN" \
              https://api.github.com/repos/$BACKEND_REPO/actions/runs \
              | jq -r '.workflow_runs[] | select(.name == "Build & Dockerize Backend") | .status' | head -n 1)

            echo "Status: $STATUS"
            if [[ "$STATUS" == "completed" ]]; then
              echo "Backend build completed."
              break
            fi
            sleep 15
          done
        env:
          BACKEND_TRIGGER_PAT: ${{ secrets.BACKEND_TRIGGER_PAT }}
